generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  email          String   @unique
  password       String
  name           String
  phone          String?
  image          String?
  state          String?
  brandColor   String?   @default("00D4FF")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  role   Role     @default(USER)
  raffle Raffle[]
}

model Raffle {
  id          String  @id @default(cuid())
  title       String
  description String?
  banner      String
  totalTickets Int          @default(100)
  price        Float
  award        Float
  status       RaffleStatus @default(ACTIVE)
  drawDate     DateTime     @default(dbgenerated("(now() + interval '15 days')"))
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  ownerId String
  owner   User     @relation(fields: [ownerId], references: [id])
  tickets Ticket[]
}

model Ticket {
  id     String       @id @default(cuid())
  number String
  status TicketStatus @default(AVAILABLE)

  raffleId       String
  raffle         Raffle           @relation(fields: [raffleId], references: [id])
  ticketPurchase TicketPurchase[]
}

model TicketPurchase {
  id        String   @id @default(cuid())
  buyerName String
  buyerId   String
  phone     String
  state     String
  proofUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ticketId String
  ticket   Ticket @relation(fields: [ticketId], references: [id])
}

enum RaffleStatus {
  ACTIVE
  INACTIVE
  PENDING
  COMPLETED
}

enum TicketStatus {
  AVAILABLE
  RESERVED
  SOLD
}

enum Role {
  ADMIN
  USER
}
