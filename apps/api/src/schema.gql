# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  name: String!
  password: String
  email: String!
  image: String
  brandColor: String!
  phone: String
  state: String
  role: String
  createdAt: DateTime
  updatedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AuthResponse {
  accessToken: String!
  user: User!
}

type Ticket {
  id: ID!
  number: String!
  status: String
}

type Raffle {
  id: ID!
  title: String!
  description: String
  banner: String!
  totalTickets: Float!
  price: Float!
  award: Float!
  status: String!
  available: Float
  sold: Float
  progress: Float
  drawDate: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  tickets: [Ticket!]
  owner: User
}

type Query {
  users: [User!]!
  user(id: String!): User!
  profile: User!
  raffles: [Raffle!]!
  raffle(id: String!): Raffle!
  tickets: [Ticket!]!
  ticket(id: String!): Ticket!
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  updateUser(id: String!, input: UpdateUserInput!): User!
  deleteUser(id: String!): User!
  register(input: CreateUserInput!): AuthResponse!
  login(input: LoginInput!): AuthResponse!
  createRaffle(input: CreateRaffleInput!): Raffle!
  updateRaffle(id: String!, input: UpdateRaffleInput!): Raffle!
  deleteRaffle(id: String!): Raffle!
  createTicket(input: CreateTicketInput!): Ticket!
  updateTicket(id: String!, input: UpdateTicketInput!): Ticket!
  deleteTicket(id: String!): Ticket!
}

input CreateUserInput {
  name: String!
  email: String!
  image: String
  brandColor: String
  password: String!
  phone: String
  state: String
  role: String
}

input UpdateUserInput {
  name: String
  email: String
  image: String
  brandColor: String
  password: String
  phone: String
  state: String
  role: String
}

input LoginInput {
  email: String!
  password: String!
}

input CreateRaffleInput {
  title: String!
  description: String
  banner: String!
  totalTickets: Int!
  price: Int!
  award: Int!
  status: RaffleStatus
  drawDate: DateTime!
  ownerId: String!
}

enum RaffleStatus {
  ACTIVE
  INACTIVE
  PENDING
  COMPLETED
}

input UpdateRaffleInput {
  title: String
  description: String
  banner: String
  totalTickets: Int
  price: Int
  award: Int
  status: RaffleStatus
  drawDate: DateTime
  ownerId: String
}

input CreateTicketInput {
  number: String!
  raffleId: String!
}

input UpdateTicketInput {
  number: String
  raffleId: String
}